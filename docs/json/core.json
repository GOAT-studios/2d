{
  "title": "2D Core",
  "intro": "The core of 2D consists of just one object (in the global scope): `Game`. Game is javascript contstructor, so with `new Game(...)` you can create as many Games as you wish on a sigle page, even with completely different options.<br/>Game has just a few methods and variables, mainly for the game loop, starting and stopping, and managing plugins. That's the true power and beauty of 2D: it consists of a very small core, with all the functionality added with plugins, like `Draw`, `Collisions` etc. There are a few basic plugins, in `src/plugins`.",
  "main": {
    "name": "Game",
    "description": "The main Game constructor",
    "arguments": [
      {
        "name": "options",
        "type": "Object",
        "default": "{}",
        "description": "An object containing some options. All possible keys can be found in `options.md`. For no options, use an empty Object."
      },
      {
        "name": "plugins",
        "type": "Object",
        "default": "{}",
        "optional": true,
        "description": "An object containing some plugins to be added to the Game. Keys are plugin type (e.g. `Colliders`), values are the plugins (as passed to `Game.plugin()`)."
      }
    ],
    "children": [
      {
        "name": "start",
        "type": "method",
        "description": "Start the Game.",
        "arguments": [
          {
            "name": "scene",
            "type": "integer|string|Scene",
            "optional": true,
            "default": "null",
            "description": "An integer or string referencing a scene. This will be passed to `Game.world.load()`"
          }
        ],
        "return": "Game"
      },
      {
        "name": "stop",
        "type": "method",
        "description": "Stop the Game. Calls Reset; to stop the Game temporarily, consider using `Game.pause()` instead.",
        "return": "Game"
      },
      {
      	"name": "pause",
      	"type": "method",
      	"description": "Pause the Game. After pause, the Game can easily be resumed with `Game.start()`.",
      	"return": "Game",
      },
      {
      	"name": "init",
      	"type": "method",
      	"description": "Initialise the Game. This loads the first scene, initialises the categories, colliders etc.",
      	"return": "Game",
      	"arguments": [
      		{
      			"name": "scene",
      			"type": "integer|string|Scene",
      			"description": "An identifier for a Scene or a Scene. This will be passed to `Game.world.load()`"
      		}
      	]
      },
      {
        "name": "reset",
        "type": "method",
        "description": "Reset the Game, i.e. reset it to a clean state, so a Scene can be loaded and started without glitches. This involves resetting positions, timers, etc.",
        "return": "Game"
      },
      {
        "name": "utils",
        "type": "Object",
        "description": "Just some handy utilities.",
        "children": []
      },
      "worlds",
      "colliders",
      "categories",
      "camera",
      "draw"
    ]
  }
}